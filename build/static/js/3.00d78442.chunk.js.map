{"version":3,"sources":["components/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["module","exports","checkoutSummary","props","className","classes","CheckoutSummary","style","width","margin","Burger","BurgerIngredients","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","email","street","postalCode","minLength","maxLength","country","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHanlder","inputIdentifier","updatedInputElement","updateObject","target","checkValidity","updatedOrderForm","inputElement","setState","formElements","key","this","push","id","config","form","onSubmit","map","formElement","Input","elementtype","changed","shouldValidate","invalid","disabled","loading","Component","connect","burgerBuilder","totalPrice","auth","idToken","dispatch","actions","withErrorHandler","axios","Checkout","history","goBack","replace","summary","to","purchasedRedirect","purchased","path","match","component","input","inputClasses","InputElement","Invalid","onChange","join","option","Label","label"],"mappings":"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","file":"static/js/3.00d78442.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2mwwu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\",\"Input\":\"ContactData_Input__2fK5-\"};","import React from 'react';\nimport Burger from '../Burger/Burger'\nimport Button from '../UI/Button/Button'\n\nimport classes from './CheckoutSummary.module.css'\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>Hope it takes well</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger BurgerIngredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary;","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Button from '../../../components/UI/Button/Button'\nimport classes from './ContactData.module.css'\nimport axios  from '../../../axios-order'\nimport Spinner from '../../../components/UI/Spinner/Spinners'\nimport Input from '../../../components/UI/Input/Input'\nimport withErrorHandler from '../../../hoc/withErrorHandler/WithErrorHandler'\nimport * as actions from '../../../store/actions/index'\nimport updateObject, {checkValidity} from '../../../shared/utility'\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                }\n                , value: ''\n                , validation: {\n                    required: true\n                }\n                , valid: false\n                , touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Email'\n                }\n                , value: ''\n                , validation: {\n                    required: true\n                }\n                , valid: false\n                , touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Address'\n                }\n                , value: ''\n                , validation: {\n                    required: true\n                }\n                , valid: false\n                , touched: false\n            },\n            postalCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Postal'\n                }\n                , value: ''\n                , validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                }\n                , valid: false\n                , touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Country'\n                }\n                , value: ''\n                , validation: {\n                    required: true\n                }\n                , valid: false\n                , touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                }\n                , value: 'fastest'\n                , valid: true\n\n            }\n        },\n        formIsValid: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        const formData = {};\n        for(let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            deliveryMethod: 'fastest',\n            userId: this.props.userId\n        }\n        this.props.onOrderBurger(order, this.props.token)\n    }\n\n    inputChangedHanlder = (event, inputIdentifier) => {\n        const updatedInputElement = updateObject(this.state.orderForm[inputIdentifier], {\n            value: event.target.value,\n            touched: true,\n            valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation)\n        })\n\n        const updatedOrderForm = updateObject(this.state.orderForm, {\n            [inputIdentifier]: updatedInputElement\n        });\n\n        let formIsValid = true;\n        for(let inputElement in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputElement].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render () {\n\n        const formElements = [];\n        for(let key in this.state.orderForm) {\n            formElements.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {\n                    formElements.map(formElement => {\n                        return <Input\n                            key={formElement.id}\n                            elementtype={formElement.config.elementType}\n                            elementConfig={formElement.config.elementConfig}\n                            value={formElement.config.value} \n                            changed={(event) => this.inputChangedHanlder(event, formElement.id)}\n                            shouldValidate={formElement.config.validation}\n                            invalid={!formElement.config.valid}\n                            touched={formElement.config.touched}/>\n                    })\n                }\n                    <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n                </form>\n        );\n        if(this.props.loading) form = <Spinner/>\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.idToken,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport CheckoutSummary from '../../components/CheckoutSummary/CheckoutSummary';\nimport {Route, Redirect} from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    checkoutCancelled = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinued = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n    render() {\n        let summary = <Redirect to=\"/\" />\n        const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n        if(this.props.ings) {\n            summary = <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary\n                    checkoutContinued={this.checkoutContinued}\n                    checkoutCancelled={this.checkoutCancelled}\n                    ingredients={this.props.ings}/>\n                    <Route \n                        path={this.props.match.path + '/contact-data'} \n                        component={ContactData}\n                        // render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.price} {...props}/>)}\n                        />\n                </div>\n        }\n        return summary\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n}\n\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react'\nimport classes from './Input.module.css'\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement]\n    if(props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n    switch(props.elementtype) {\n        case 'input':\n            inputElement = <input \n                                onChange={props.changed}\n                                value={props.value}\n                                className={inputClasses.join(' ')} \n                                {...props.elementConfig} />;\n            break;\n        case 'textarea': \n            inputElement = <textarea \n                                onChange={props.changed}\n                                className={inputClasses.join(' ')} \n                                {...props.elementConfig} />;\n            break;\n        case 'select': \n            inputElement = (\n                            <select\n                                onChange={props.changed}\n                                className={inputClasses.join(' ')} \n                                value={props.value}>\n                                    {props.elementConfig.options.map(option => (\n                                        <option key={option.value} value={option.value}>{option.displayValue}</option>\n                                    ))}\n                            </select>\n            );\n            break;\n        default:\n            inputElement = <input \n                                onChange={props.changed}\n                                value={props.value}\n                                className={inputClasses.join(' ')} \n                                {...props} />\n    }\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};"],"sourceRoot":""}