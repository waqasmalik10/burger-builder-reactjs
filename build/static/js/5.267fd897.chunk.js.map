{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientsOutput","map","ing","style","textTransform","display","margin","border","padding","key","className","classes","Order","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","loading","id","Component","connect","state","auth","idToken","dispatch","actions","withErrorHandler","axios"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,MAAQ,uB,yHCqBXC,EAnBD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KAAK,CAACC,KAAMF,EAAgBG,OAAQL,EAAMC,YAAYC,KAGtE,IAAMI,EAAoBL,EAAYM,KAAI,SAAAC,GACtC,OAAO,0BACHC,MAAO,CAACC,cAAe,aAAcC,QAAS,eAAgBC,OAAQ,QAASC,OAAQ,iBAAkBC,QAAS,OAClHC,IAAKP,EAAIJ,MAAOI,EAAIJ,KAFjB,KAEyBI,EAAIH,OAF7B,QAIX,OACI,yBAAKW,UAAWC,IAAQC,OACxB,2CAAiBZ,GACb,qCAAU,uCAAaa,WAAWnB,EAAMoB,OAAOC,QAAQ,O,gCCT7DC,E,4LAGEC,KAAKvB,MAAMwB,cAAcD,KAAKvB,MAAMyB,MAAOF,KAAKvB,MAAM0B,U,+BAItD,IAAIC,EAAS,kBAAC,IAAD,MAMb,OALIJ,KAAKvB,MAAM4B,UACXD,EAASJ,KAAKvB,MAAM2B,OAAOpB,KAAI,SAAAR,GAC3B,OAAO,kBAACmB,EAAD,CAAOH,IAAKhB,EAAM8B,GAAI5B,YAAaF,EAAME,YAAamB,MAAOrB,EAAMqB,YAI9E,6BACKO,O,GAfIG,aAoCNC,uBAfS,SAAAC,GACpB,MAAO,CACHL,OAAQK,EAAMjC,MAAM4B,OACpBC,QAASI,EAAMjC,MAAM6B,QACrBH,MAAOO,EAAMC,KAAKC,QAClBR,OAAQM,EAAMC,KAAKP,WAIA,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,QAI/DK,CAA6CM,YAAiBf,EAAQgB","file":"static/js/5.267fd897.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react'\nimport classes from './Order.module.css'\n\nconst order = (props) => {\n    const ingredients = [];\n    for(let ingredientName in props.ingredients) {\n        ingredients.push({name: ingredientName, amount: props.ingredients[ingredientName]});\n    }\n\n    const ingredientsOutput = ingredients.map(ing => {\n        return <span \n            style={{textTransform: 'capitalize', display: 'inline-block', margin: '0 8px', border: '1px solid #ccc', padding: '5px'}} \n            key={ing.name}>{ing.name} ({ing.amount})</span>\n    })\n    return (\n        <div className={classes.Order}>\n        <p>Ingredients: {ingredientsOutput}</p>\n            <p>Price: <strong>USD {parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    )\n}\n\nexport default order;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport Order from '../../components/Order/Order'\nimport axios from '../../axios-order'\nimport withErrorHandler from '../../hoc/withErrorHandler/WithErrorHandler'\nimport * as actions from '../../store/actions';\nimport Spinner from '../../components/UI/Spinner/Spinners'\n\nclass Orders extends Component {\n    \n    componentDidMount() {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render() {\n        let orders = <Spinner />\n        if(!this.props.loading) {\n            orders = this.props.orders.map(order=> {\n                return <Order key={order.id} ingredients={order.ingredients} price={order.price}/>});\n            \n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.idToken,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}